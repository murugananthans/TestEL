name: TestDeployP

env: 
  PHP_VERSION: '8.x'        
  CI : false
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:   

      - name: Setup PHP        
        uses: actions/checkout@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: 'composer.json'

      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_O UTPUT
      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      #- name: Zip artifact for deployment
       # run: zip release.zip ./* -r
    
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: release.zip
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Devops'
      #CI : true
            
    steps:
              
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app          
          path: "php-app-dep/"
                
          
      - name: 'Deploy to Azure VM'
        #id: deploy-to-webapp       
        #uses:  appleboy/ssh-action@master
        #uses: easingthemes/ssh-deploy@main
        uses: appleboy/scp-action@v0.1.4
              
              
        
        with:          
          host : ${{secrets.HOST}}
          username : ${{secrets.USER}}          
          port : ${{secrets.PORT}}
          password : ${{secrets.PASS}}          
          source : php-app-dep/*
          target: /var/www/html/testxm         
          run: |
             sudo whoami
                  
          script: |
           whoami
           ls -al
           pwd
           steps:
      - uses: actions/github-script@v6
        with:
          run: | 
            whoami
          
