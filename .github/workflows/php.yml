env: 
  #AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  PHP_VERSION: '8.x'                   # set this to the PHP version to use 
  CI : true
on:
  push:
    branches:
      - Devops

jobs:
  build:
    runs-on: ubuntu-latest

    steps:   

      - name: Setup PHP        
        uses: actions/checkout@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: 'composer.json'

      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: .
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Devops'
      #CI : true
      #url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      #- name : Upload art
      - uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: .
        
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app
          path: /home/runner/work/CMS/CMS/distfiles
          
      - name: 'Deploy to Azure VM'
        id: deploy-to-webapp       
        uses:  appleboy/ssh-action@master
        with:
          host : ${{secrets.HOST}} 
          username : ${{secrets.USER}}          
          port : ${{secrets.PORT}}          
          password: ${{secrets.PWD}}
          source :  /home/runner/work/CMS/CMS/distfiles/*
          target: /var/testdep3
          script: |
            whoami
            ls -al
            pwd
            
          
          
          
          
  
              
